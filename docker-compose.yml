version: '3.8'

services:
  # Базы данных
  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - user-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d user_db" ]
      interval: 5s
      timeout: 5s
      retries: 10

  company-db:
    image: postgres:15
    container_name: company-db
    environment:
      POSTGRES_DB: company_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - company-data:/var/lib/postgresql/data
    networks:
      - backend

  # Сервис обнаружения (Eureka)
  discovery-service:
    build:
      context: ./service-discovery
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - backend
    depends_on:
      - config-service  # Config Server должен стартовать первым



    # Config Server (локальные конфиги)
  config-service:
    build:
      context: ./config-service
    ports:
      - "8888:8888"  # Проброс портов
    volumes:
      - ./config-service/src/main/resources/configs:/configs
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:/configs/ # активация профиля
    depends_on:
      - service-discovery

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8089:8089"
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888  # Подключаем Config Server
    depends_on:
      - config-service
      - discovery-service
      - user-service
      - company-service
    networks:
      - backend

  # User Service
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - config-service
      - user-db
      - discovery-service
#      - company-service
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888

  # Company Service
  company-service:
    build:
      context: ./company-service
    container_name: company-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://company-db:5432/company_db
      - USER_SERVICE_URL=http://user-service:8081
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
    depends_on:
      - config-service
      - company-db
      - discovery-service
#      - user-service
    networks:
      - backend

# Тома для хранения данных PostgreSQL
volumes:
  user-data:
  company-data:

# Сеть для взаимодействия контейнеров
networks:
  backend:
    driver: bridge